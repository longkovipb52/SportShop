@model SportShop.Models.ViewModels.CheckoutViewModel
@{
    ViewData["Title"] = "Thanh toán";
}

<style>
    .checkout-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 30px 15px;
    }
    
    .checkout-header {
        text-align: center;
        margin-bottom: 40px;
    }
    
    .checkout-header h2 {
        color: #2c3e50;
        font                    <!-- PayPal Container -->
                    <div class="paypal-container" id="paypalContainer" style="display: none;">
                        <h6 class="mb-3">Thanh toán với PayPal</h6>
                        <p class="text-muted mb-3">Bạn sẽ được chuyển đến trang PayPal để hoàn tất thanh toán.</p>
                        <p class="text-info mb-3">
                            <i class="fas fa-info-circle"></i>
                            Tổng tiền sẽ được chuyển đổi từ VND sang USD với tỷ giá 1 USD = 25,000 VND
                        </p>
                        <div class="text-center">
                            <i class="fab fa-paypal" style="font-size: 2rem; color: #0070ba;"></i>
                            <br>
                            <small>Giao dịch được bảo mật bởi PayPal</small>
                        </div>
                    </div>

                    <!-- MoMo Container -->
                    <div class="momo-container" id="momoContainer" style="display: none;">
                        <h6 class="mb-3">Thanh toán với MoMo QR Code</h6>
                        <p class="text-muted mb-3">Bạn sẽ được hiển thị mã QR để quét bằng app MoMo.</p>
                        <p class="text-info mb-3">
                            <i class="fas fa-info-circle"></i>
                            Quét mã QR bằng app MoMo để thanh toán nhanh chóng và bảo mật
                        </p>
                        <div class="text-center">
                            <i class="fas fa-qrcode" style="font-size: 2rem; color: #d82d8b;"></i>
                            <br>
                            <small>Thanh toán bằng mã QR MoMo</small>
                        </div>
                    </div>

                    <!-- VNPay Container -->
                    <div class="vnpay-container" id="vnpayContainer" style="display: none;">
                        <h6 class="mb-3">Thanh toán với VNPay</h6>
                        <p class="text-muted mb-3">Bạn sẽ được chuyển đến cổng thanh toán VNPay để hoàn tất giao dịch.</p>
                        <div class="alert alert-info">
                            <h6><i class="fas fa-info-circle me-2"></i>Hướng dẫn thanh toán VNPay</h6>
                            <ul class="mb-0">
                                <li>Chọn ngân hàng và nhập thông tin thẻ</li>
                                <li>Xác thực OTP từ ngân hàng</li>
                                <li>Hoàn tất thanh toán</li>
                            </ul>
                        </div>
                        <div class="text-center">
                            <i class="fas fa-university" style="font-size: 2rem; color: #1976d2;"></i>
                            <br>
                            <small>Thanh toán an toàn qua VNPay</small>
                        </div>
                    </div>600;
        margin-bottom: 10px;
    }
    
    .step-indicator {
        display: flex;
        justify-content: center;
        margin: 30px 0;
    }
    
    .step {
        display: flex;
        align-items: center;
        margin: 0 20px;
    }
    
    .step-number {
        width: 35px;
        height: 35px;
        border-radius: 50%;
        background: #e9ecef;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 600;
        margin-right: 10px;
    }
    
    .step.active .step-number {
        background: #007bff;
        color: white;
    }
    
    .step.completed .step-number {
        background: #28a745;
        color: white;
    }
    
    .order-summary {
        background: #f8f9fa;
        border-radius: 15px;
        padding: 25px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        position: sticky;
        top: 20px;
    }
    
    .form-section {
        background: white;
        border-radius: 15px;
        padding: 25px;
        margin-bottom: 25px;
        box-shadow: 0 5px 15px rgba(0,0,0,0.08);
    }
    
    .section-title {
        color: #2c3e50;
        font-weight: 600;
        margin-bottom: 20px;
        font-size: 1.2rem;
        border-bottom: 2px solid #e9ecef;
        padding-bottom: 10px;
    }
    
    .form-control {
        border-radius: 10px;
        border: 2px solid #e9ecef;
        padding: 12px 15px;
        transition: all 0.3s ease;
    }
    
    .form-control:focus {
        border-color: #007bff;
        box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);
    }
    
    .payment-method {
        border: 2px solid #e9ecef;
        border-radius: 10px;
        padding: 15px;
        margin-bottom: 15px;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .payment-method:hover {
        border-color: #007bff;
        background: #f8f9ff;
    }
    
    .payment-method.selected {
        border-color: #007bff;
        background: #e7f3ff;
    }
    
    .payment-icon {
        width: 40px;
        height: 40px;
        margin-right: 15px;
    }
    
    .order-item {
        display: flex;
        align-items: center;
        padding: 15px 0;
        border-bottom: 1px solid #e9ecef;
    }
    
    .order-item:last-child {
        border-bottom: none;
    }
    
    .item-image {
        width: 60px;
        height: 60px;
        object-fit: cover;
        border-radius: 8px;
        margin-right: 15px;
    }
    
    .item-details {
        flex: 1;
    }
    
    .item-name {
        font-weight: 600;
        margin-bottom: 5px;
    }
    
    .item-attributes {
        font-size: 0.875rem;
        color: #6c757d;
    }
    
    .item-price {
        font-weight: 600;
        color: #007bff;
    }
    
    .summary-row {
        display: flex;
        justify-content: space-between;
        margin-bottom: 10px;
        padding: 8px 0;
    }
    
    .summary-row.total {
        border-top: 2px solid #dee2e6;
        margin-top: 15px;
        padding-top: 15px;
        font-weight: 600;
        font-size: 1.1rem;
        color: #007bff;
    }
    
    .btn-checkout {
        background: linear-gradient(135deg, #007bff, #0056b3);
        border: none;
        border-radius: 10px;
        padding: 15px 30px;
        font-weight: 600;
        font-size: 1.1rem;
        color: white;
        width: 100%;
        transition: all 0.3s ease;
    }
    
    .btn-checkout:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 25px rgba(0,123,255,0.3);
    }
    
    .security-info {
        background: #e8f5e8;
        border-radius: 10px;
        padding: 15px;
        margin-top: 20px;
        text-align: center;
    }
    
    .card-form {
        display: none;
        margin-top: 20px;
        padding: 20px;
        background: #f8f9fa;
        border-radius: 10px;
    }
    
    .card-form.show {
        display: block;
    }
    
    @@media (max-width: 768px) {
        .step-indicator {
            flex-direction: column;
        }
        
        .step {
            margin: 10px 0;
        }
        
        .order-summary {
            position: static;
            margin-top: 30px;
        }
    }
</style>

<div class="checkout-container">
    <div class="checkout-header">
        <h2><i class="fas fa-shopping-bag"></i> Thanh toán đơn hàng</h2>
        <p class="text-muted">Vui lòng kiểm tra thông tin và hoàn tất đơn hàng của bạn</p>
    </div>

    <!-- Step Indicator -->
    <div class="step-indicator">
        <div class="step completed">
            <div class="step-number">1</div>
            <span>Giỏ hàng</span>
        </div>
        <div class="step active">
            <div class="step-number">2</div>
            <span>Thanh toán</span>
        </div>
        <div class="step">
            <div class="step-number">3</div>
            <span>Hoàn tất</span>
        </div>
    </div>

    <form asp-action="ProcessCheckout" method="post" id="checkoutForm">
        <div class="row">
            <div class="col-lg-8">
                <!-- Thông tin giao hàng -->
                <div class="form-section">
                    <h4 class="section-title">
                        <i class="fas fa-truck"></i> Thông tin giao hàng
                    </h4>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="ShippingName" class="form-label">Họ và tên *</label>
                            <input asp-for="ShippingName" class="form-control" placeholder="Nhập họ và tên">
                            <span asp-validation-for="ShippingName" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label asp-for="ShippingPhone" class="form-label">Số điện thoại *</label>
                            <input asp-for="ShippingPhone" class="form-control" placeholder="Nhập số điện thoại">
                            <span asp-validation-for="ShippingPhone" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-6 mb-3">
                            <label asp-for="Email" class="form-label">Email</label>
                            <input asp-for="Email" class="form-control" placeholder="Nhập email (tùy chọn)">
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>
                        <div class="col-md-6 mb-3">
                            <label asp-for="ShippingAddress" class="form-label">Địa chỉ giao hàng *</label>
                            <input asp-for="ShippingAddress" class="form-control" placeholder="Nhập địa chỉ giao hàng">
                            <span asp-validation-for="ShippingAddress" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label asp-for="Note" class="form-label">Ghi chú đơn hàng</label>
                        <textarea asp-for="Note" class="form-control" rows="3" placeholder="Ghi chú về đơn hàng (tùy chọn)"></textarea>
                    </div>
                </div>

                <!-- Phương thức thanh toán -->
                <div class="form-section">
                    <h4 class="section-title">
                        <i class="fas fa-credit-card"></i> Phương thức thanh toán
                    </h4>
                    
                    <div class="payment-method" data-method="COD">
                        <div class="d-flex align-items-center">
                            <div class="payment-icon d-flex align-items-center justify-content-center bg-warning text-white rounded">
                                <i class="fas fa-money-bill-wave"></i>
                            </div>
                            <div>
                                <h6 class="mb-1">Thanh toán khi nhận hàng (COD)</h6>
                                <small class="text-muted">Thanh toán bằng tiền mặt khi nhận hàng</small>
                            </div>
                            <div class="ms-auto">
                                <input type="radio" name="PaymentMethod" value="COD" class="form-check-input" checked>
                            </div>
                        </div>
                    </div>

                    <div class="payment-method" data-method="PayPal">
                        <div class="d-flex align-items-center">
                            <div class="payment-icon d-flex align-items-center justify-content-center" style="background: #0070ba;">
                                <i class="fab fa-paypal text-white"></i>
                            </div>
                            <div>
                                <h6 class="mb-1">PayPal</h6>
                                <small class="text-muted">Thanh toán an toàn với PayPal</small>
                            </div>
                            <div class="ms-auto">
                                <input type="radio" name="PaymentMethod" value="PayPal" class="form-check-input">
                            </div>
                        </div>
                    </div>

                    <div class="payment-method" data-method="MoMo">
                        <div class="d-flex align-items-center">
                            <div class="payment-icon d-flex align-items-center justify-content-center" style="background: #d82d8b;">
                                <i class="fas fa-mobile-alt text-white"></i>
                            </div>
                            <div>
                                <h6 class="mb-1">MoMo</h6>
                                <small class="text-muted">Thanh toán bằng ví điện tử MoMo</small>
                            </div>
                            <div class="ms-auto">
                                <input type="radio" name="PaymentMethod" value="MoMo" class="form-check-input">
                            </div>
                        </div>
                    </div>

                    <div class="payment-method" data-method="VNPay">
                        <div class="d-flex align-items-center">
                            <div class="payment-icon d-flex align-items-center justify-content-center" style="background: #1976d2;">
                                <i class="fas fa-credit-card text-white"></i>
                            </div>
                            <div>
                                <h6 class="mb-1">VNPay</h6>
                                <small class="text-muted">Thanh toán qua thẻ ATM/Internet Banking</small>
                            </div>
                            <div class="ms-auto">
                                <input type="radio" name="PaymentMethod" value="VNPay" class="form-check-input">
                            </div>
                        </div>
                    </div>

                    <!-- PayPal Container -->
                    <div class="paypal-container" id="paypalContainer" style="display: none;">
                        <h6 class="mb-3">Thanh toán với PayPal</h6>
                        <div id="paypal-button-container" class="text-center"></div>
                        <div class="security-info mt-3">
                            <i class="fas fa-shield-alt text-success"></i>
                            <small>Giao dịch được bảo mật bởi PayPal</small>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <!-- Tóm tắt đơn hàng -->
                <div class="order-summary">
                    <h4 class="section-title">
                        <i class="fas fa-file-invoice"></i> Tóm tắt đơn hàng
                    </h4>

                    <!-- Danh sách sản phẩm -->
                    @foreach (var item in Model.CartItems)
                    {
                        <div class="order-item">
                            <img src="@(string.IsNullOrEmpty(item.ImageUrl) ? "/images/product-placeholder.jpg" : $"/upload/product/{item.ImageUrl}")" 
                                 alt="@item.ProductName" class="item-image">
                            <div class="item-details">
                                <div class="item-name">@item.ProductName</div>
                                <div class="item-attributes">
                                    @if (!string.IsNullOrEmpty(item.Color) || !string.IsNullOrEmpty(item.Size))
                                    {
                                        <span>
                                            @if (!string.IsNullOrEmpty(item.Color))
                                            {
                                                <text>Màu: @item.Color</text>
                                            }
                                            @if (!string.IsNullOrEmpty(item.Size))
                                            {
                                                @if (!string.IsNullOrEmpty(item.Color)) { <text> / </text> }
                                                <text>Size: @item.Size</text>
                                            }
                                        </span>
                                    }
                                    <br>
                                    <span>Số lượng: @item.Quantity</span>
                                </div>
                            </div>
                            <div class="item-price">
                                @string.Format("{0:N0}đ", item.TotalPrice)
                            </div>
                        </div>
                    }

                    <!-- Tổng kết -->
                    <!-- Voucher selection -->
                    <div class="mb-3">
                        <label for="voucherSelect" class="form-label">Chọn voucher khuyến mãi</label>
                        @if (Model.AvailableVouchers.Any())
                        {
                            <div class="input-group">
                                <select id="voucherSelect" name="SelectedUserVoucherID" class="form-select">
                                    <option value="">-- Chọn voucher --</option>
                                    @foreach (var voucher in Model.AvailableVouchers)
                                    {
                                        <option value="@voucher.UserVoucherID" 
                                                data-discount="@voucher.DiscountDisplay"
                                                data-description="@voucher.Description"
                                                selected="@(Model.SelectedUserVoucherID == voucher.UserVoucherID)">
                                            @voucher.Code - @voucher.DiscountDisplay
                                            @if (voucher.EndDate.HasValue)
                                            {
                                                <text> (HSD: @voucher.EndDate.Value.ToString("dd/MM/yyyy"))</text>
                                            }
                                        </option>
                                    }
                                </select>
                                <button type="button" id="btnApplyVoucher" class="btn btn-outline-primary">Áp dụng</button>
                                <button type="button" id="btnRemoveVoucher" class="btn btn-outline-secondary" style="display:@(Model.SelectedUserVoucherID.HasValue ? "inline-block" : "none")">Bỏ</button>
                            </div>
                            <small id="voucherMessage" class="text-muted"></small>
                        }
                        else
                        {
                            <div class="text-muted">
                                <i class="fas fa-info-circle"></i> 
                                @if (ViewContext.HttpContext.Session.GetInt32("UserId").HasValue)
                                {
                                    <text>Bạn chưa có voucher nào khả dụng.</text>
                                }
                                else
                                {
                                    <text>Vui lòng đăng nhập để sử dụng voucher.</text>
                                }
                            </div>
                        }
                    </div>

                    <div class="summary-row">
                        <span>Tạm tính:</span>
                        <span id="subtotalText">@string.Format("{0:N0}đ", Model.Subtotal)</span>
                    </div>
                    @if (Model.DiscountAmount > 0)
                    {
                        <div class="summary-row">
                            <span>Giảm giá:</span>
                            <span id="discountText" class="text-success">-@string.Format("{0:N0}đ", Model.DiscountAmount)</span>
                        </div>
                    }
                    @if (Model.Tax > 0)
                    {
                        <div class="summary-row">
                            <span>Thuế:</span>
                            <span>@string.Format("{0:N0}đ", Model.Tax)</span>
                        </div>
                    }
                    <div class="summary-row total">
                        <span>Tổng cộng:</span>
                        <span id="totalText">@string.Format("{0:N0}đ", Model.Total)</span>
                    </div>

                    <button type="submit" class="btn btn-checkout mt-3" id="normalCheckoutBtn">
                        <i class="fas fa-lock"></i> Đặt hàng ngay
                    </button>

                    <div class="security-info">
                        <i class="fas fa-shield-alt text-success"></i>
                        <small>Thông tin của bạn được bảo mật an toàn</small>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const voucherSelect = document.getElementById('voucherSelect');
            const btnApply = document.getElementById('btnApplyVoucher');
            const btnRemove = document.getElementById('btnRemoveVoucher');
            const voucherMsg = document.getElementById('voucherMessage');
            const subtotalText = document.getElementById('subtotalText');
            const discountTextElId = 'discountText';
            const totalText = document.getElementById('totalText');

            function setMessage(msg, type = 'muted') {
                voucherMsg.className = type === 'error' ? 'text-danger' : (type === 'success' ? 'text-success' : 'text-muted');
                voucherMsg.textContent = msg || '';
            }

            if (btnApply) {
                btnApply.addEventListener('click', async () => {
                    const selectedUserVoucherID = voucherSelect ? voucherSelect.value : '';
                    if (!selectedUserVoucherID) { setMessage('Vui lòng chọn voucher', 'error'); return; }
                    btnApply.disabled = true; setMessage('Đang kiểm tra...', '');
                    try {
                        const formData = new FormData();
                        formData.append('userVoucherID', selectedUserVoucherID);
                        const res = await fetch('/Cart/ApplyUserVoucher', { method: 'POST', body: formData });
                        const data = await res.json();
                        if (!data.success) { setMessage(data.message || 'Không áp dụng được', 'error'); btnApply.disabled = false; return; }
                        // Update UI
                        subtotalText.textContent = data.formattedSubtotal;
                        // Discount
                        let discountEl = document.getElementById(discountTextElId);
                        if (!discountEl) {
                            const container = document.createElement('div');
                            container.className = 'summary-row';
                            container.innerHTML = `<span>Giảm giá:</span><span id="${discountTextElId}" class="text-success">-${data.formattedDiscount}</span>`;
                            // insert before tax/total rows
                            const totalRow = document.querySelector('.summary-row.total');
                            totalRow.parentNode.insertBefore(container, totalRow);
                            discountEl = document.getElementById(discountTextElId);
                        } else {
                            discountEl.textContent = '-' + data.formattedDiscount;
                        }
                        totalText.textContent = data.formattedTotal;
                        setMessage(data.message, 'success');
                        btnApply.style.display = 'none';
                        btnRemove.style.display = 'inline-block';
                    } catch (e) {
                        setMessage('Có lỗi xảy ra khi áp dụng voucher', 'error');
                    } finally {
                        btnApply.disabled = false;
                    }
                });
            }

            if (btnRemove) {
                btnRemove.addEventListener('click', async () => {
                    btnRemove.disabled = true; setMessage('Đang bỏ áp dụng...', '');
                    try {
                        const res = await fetch('/Cart/RemoveUserVoucher', { method: 'POST' });
                        const data = await res.json();
                        if (!data.success) { setMessage('Không thể bỏ voucher', 'error'); btnRemove.disabled = false; return; }
                        subtotalText.textContent = data.formattedSubtotal;
                        const discountEl = document.getElementById(discountTextElId);
                        if (discountEl) discountEl.parentElement.remove();
                        totalText.textContent = data.formattedTotal;
                        if (voucherSelect) voucherSelect.value = '';
                        setMessage('');
                        btnApply.style.display = 'inline-block';
                        btnRemove.style.display = 'none';
                    } catch (e) {
                        setMessage('Có lỗi xảy ra khi bỏ voucher', 'error');
                    } finally {
                        btnRemove.disabled = false;
                    }
                });
            }
            // Xử lý chọn phương thức thanh toán
            const paymentMethods = document.querySelectorAll('.payment-method');
            const paypalContainer = document.getElementById('paypalContainer');

            paymentMethods.forEach(method => {
                method.addEventListener('click', function() {
                    // Remove selected class from all methods
                    paymentMethods.forEach(m => m.classList.remove('selected'));
                    
                    // Add selected class to clicked method
                    this.classList.add('selected');
                    
                    // Check the radio button
                    const radio = this.querySelector('input[type="radio"]');
                    radio.checked = true;
                    
                    // Show/hide appropriate forms
                    const selectedMethod = this.dataset.method;
                    
                    // Hide all forms first
                    if (paypalContainer) paypalContainer.style.display = 'none';
                    
                    if (selectedMethod === 'PayPal') {
                        if (paypalContainer) paypalContainer.style.display = 'block';
                    }
                });
            });

            // Form validation and submission
            const form = document.getElementById('checkoutForm');
            form.addEventListener('submit', function(e) {
                const selectedPayment = document.querySelector('input[name="PaymentMethod"]:checked');
                
                if (!selectedPayment) {
                    e.preventDefault();
                    alert('Vui lòng chọn phương thức thanh toán');
                    return;
                }

                // Handle PayPal payment
                if (selectedPayment.value === 'PayPal') {
                    e.preventDefault();
                    
                    // Show loading state
                    const submitBtn = document.querySelector('.btn-checkout');
                    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Đang chuyển đến PayPal...';
                    submitBtn.disabled = true;
                    
                    // Submit to PayPal creation endpoint
                    form.action = '/Cart/CreatePayPalPayment';
                    form.submit();
                    return;
                }

                // Handle MoMo payment
                if (selectedPayment.value === 'MoMo') {
                    e.preventDefault();
                    
                    // Show loading state
                    const submitBtn = document.querySelector('.btn-checkout');
                    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Đang chuyển đến MoMo...';
                    submitBtn.disabled = true;
                    
                    // Submit to MoMo creation endpoint
                    form.action = '/Cart/CreateMoMoPayment';
                    form.submit();
                    return;
                }

                // Handle VNPay payment
                if (selectedPayment.value === 'VNPay') {
                    e.preventDefault();
                    
                    // Show loading state
                    const submitBtn = document.querySelector('.btn-checkout');
                    submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Đang chuyển đến VNPay...';
                    submitBtn.disabled = true;
                    
                    // Submit to VNPay creation endpoint
                    form.action = '/Cart/CreateVnPayPayment';
                    form.submit();
                    return;
                }
                
                // Show loading state for other payment methods (COD)
                const submitBtn = form.querySelector('.btn-checkout');
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Đang xử lý...';
                submitBtn.disabled = true;
            });
        });
    </script>
}
