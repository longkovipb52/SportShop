@model SportShop.Models.ViewModels.HomeViewModel
@{
    ViewData["Title"] = "Home Page";
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Hero Section -->
<section id="home" class="hero-section">
    <div class="hero-overlay"></div>
    <div class="container">
        <div class="row align-items-center min-vh-100">
            <div class="col-lg-6">
                <div class="hero-content text-white">
                    <h1 class="display-4 fw-bold mb-4 animate-fade-in">
                        Nâng cao trải nghiệm thể thao của bạn với LoLoSport Store
                    </h1>
                    <p class="lead mb-5 animate-fade-in-delay">
                        Khám phá các thiết bị, quần áo và phụ kiện thể thao cao cấp được thiết kế riêng cho bạn.
                    </p>
                    <div class="hero-buttons animate-fade-in-delay-2">
                        <a asp-controller="Product" asp-action="Index" class="btn btn-primary btn-lg me-3 gradient-btn">
                            <i class="fas fa-shopping-bag me-2"></i>Mua sắm ngay
                        </a>
                        <a href="#categories" class="btn btn-outline-light btn-lg">
                            <i class="fas fa-compass me-2"></i>Khám phá
                        </a>
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="hero-image text-center animate-fade-in-delay">
                    <img src="/image/sport-banner.png" alt="Sports Equipment" class="img-fluid rounded-3 shadow hero-img animate-float">
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Featured Categories -->
<section id="categories" class="py-5 bg-light">
    <div class="container">
        <div class="row">
            <div class="col-12 text-center mb-5">
                <h2 class="display-5 fw-bold text-dark">Danh mục nổi bật</h2>
                <p class="lead text-muted">Khám phá các danh mục thể thao cùng chúng tôi</p>
            </div>
        </div>
        
        <div class="row g-4">
            @if (Model.FeaturedCategories != null && Model.FeaturedCategories.Any())
            {
                @* Hàng đầu tiên: 4 danh mục đầu *@
                @foreach (var category in Model.FeaturedCategories.Take(4))
                {
                    <div class="col-lg-3 col-md-6">
                        <div class="category-card card h-100 border-0 shadow-sm">
                            <div class="card-img-wrapper">
                                @if (!string.IsNullOrEmpty(category.ImageURL))
                                {
                                    <img src="~/upload/category/@category.ImageURL" class="card-img-top" alt="@category.Name">
                                }
                                else
                                {
                                    <img src="/placeholder.svg?height=250&width=400&text=@category.Name" class="card-img-top" alt="@category.Name">
                                }
                                <div class="card-overlay">
                                    <a asp-controller="Product" asp-action="ByCategory" asp-route-id="@category.CategoryID" class="btn btn-primary">Xem chi tiết</a>
                                </div>
                            </div>
                            <div class="card-body text-center">
                                <h5 class="card-title fw-bold">@category.Name</h5>
                                <p class="card-text text-muted">@category.Description</p>
                                <div class="price-tag">
                                    <span class="h5 text-primary fw-bold">Từ @(category.Products?.Min(p => p.Price).ToString("N0") ?? "0") đ</span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
        
        @* Hàng thứ hai: 4 danh mục tiếp theo (nếu có) *@
        @if (Model.FeaturedCategories != null && Model.FeaturedCategories.Count() > 4)
        {
            <div class="row g-4 mt-4">
                @foreach (var category in Model.FeaturedCategories.Skip(4).Take(4))
                {
                    <div class="col-lg-3 col-md-6">
                        <div class="category-card card h-100 border-0 shadow-sm">
                            <div class="card-img-wrapper">
                                @if (!string.IsNullOrEmpty(category.ImageURL))
                                {
                                    <img src="~/upload/category/@category.ImageURL" class="card-img-top" alt="@category.Name">
                                }
                                else
                                {
                                    <img src="/placeholder.svg?height=250&width=400&text=@category.Name" class="card-img-top" alt="@category.Name">
                                }
                                <div class="card-overlay">
                                    <a asp-controller="Product" asp-action="ByCategory" asp-route-id="@category.CategoryID" class="btn btn-primary">Xem chi tiết</a>
                                </div>
                            </div>
                            <div class="card-body text-center">
                                <h5 class="card-title fw-bold">@category.Name</h5>
                                <p class="card-text text-muted">@category.Description</p>
                                <div class="price-tag">
                                    <span class="h5 text-primary fw-bold">Từ @(category.Products?.Min(p => p.Price).ToString("N0") ?? "0") đ</span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
        
        @* Hiển thị thông báo nếu không có danh mục nào *@
        @if (Model.FeaturedCategories == null || !Model.FeaturedCategories.Any())
        {
            <div class="row">
                <div class="col-12 text-center">
                    <p>Không có danh mục nào.</p>
                </div>
            </div>
        }
    </div>
</section>

<!-- Featured Brands -->
<section id="brands" class="py-5">
    <div class="container">
        <div class="row">
            <div class="col-12 text-center mb-5">
                <h2 class="display-5 fw-bold text-dark">Top 5 thương hiệu yêu thích nhất</h2>
                <p class="lead text-muted">Những thương hiệu được yêu thích nhất dựa trên số lượng sản phẩm</p>
            </div>
        </div>
        
        <div class="brands-carousel">
            <div class="row g-4 justify-content-center">
                @if (Model.FeaturedBrands != null && Model.FeaturedBrands.Any())
                {
                    foreach (var brand in Model.FeaturedBrands)
                    {
                        <div class="col-lg-2 col-md-3 col-4">
                            <div class="brand-item text-center">
                                <a asp-controller="Product" asp-action="ByBrand" asp-route-id="@brand.BrandID" class="brand-link">
                                    <div class="brand-logo-wrapper">
                                        <img src="~/upload/branch/@brand.Logo" alt="@brand.Name" class="img-fluid brand-logo" 
                                             onerror="this.src='/placeholder.svg?height=80&width=120&text=@brand.Name'">
                                    </div>
                                    <h6 class="brand-name mt-2">@brand.Name</h6>
                                </a>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="col-12 text-center">
                        <p>Không có thương hiệu nào.</p>
                    </div>
                }
            </div>
        </div>
    </div>
</section>

<!-- Brand Navigation -->
<section class="category-navigation">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <ul class="nav nav-tabs category-nav-tabs" id="brandTabs" role="tablist">
                    @if (Model.FeaturedBrands != null && Model.FeaturedBrands.Any())
                    {
                        @for (int i = 0; i < Model.FeaturedBrands.Count(); i++)
                        {
                            var brand = Model.FeaturedBrands.ElementAt(i);
                            <li class="nav-item" role="presentation">
                                <a class="nav-link @(i == 0 ? "active" : "")" 
                                   id="brand-@brand.BrandID-tab" 
                                   data-bs-toggle="tab" 
                                   data-bs-target="#brand-@brand.BrandID" 
                                   type="button" 
                                   role="tab" 
                                   aria-controls="brand-@brand.BrandID" 
                                   aria-selected="@(i == 0 ? "true" : "false")">
                                    <span>@brand.Name</span>
                                </a>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    </div>
</section>

<!-- Products by Brand -->
<section class="home-products-section">
    <div class="container">
        <div class="tab-content" id="brandTabsContent">
            @if (Model.ProductsByBrand != null && Model.ProductsByBrand.Any())
            {
                @for (int i = 0; i < Model.FeaturedBrands.Count(); i++)
                {
                    var brand = Model.FeaturedBrands.ElementAt(i);
                    var products = Model.ProductsByBrand.ContainsKey(brand) ? Model.ProductsByBrand[brand] : new List<Product>();
                    
                    <div class="tab-pane fade @(i == 0 ? "show active" : "")" 
                         id="brand-@brand.BrandID" 
                         role="tabpanel" 
                         aria-labelledby="brand-@brand.BrandID-tab">
                        
                        <div class="category-product-container">
                            <h3 class="category-title">Sản phẩm @brand.Name</h3>
                            
                            @if (products.Any())
                            {
                                <div class="row g-3">
                                    @foreach (var product in products)
                                    {
                                        <div class="col-lg-2 col-md-4 col-sm-6 col-6">
                                            <div class="home-product-card card h-100">
                                                <div class="card-img-top-container">
                                                    <img src="@(!string.IsNullOrEmpty(product.ImageURL) ? "/upload/product/" + product.ImageURL : "/image/default-product.png")" 
                                                         class="card-img-top" alt="@product.Name">
                                                    
                                                    <div class="product-actions">
                                                        <button class="btn quick-view" 
                                                                data-product-id="@product.ProductID" 
                                                                title="Xem nhanh">
                                                            <i class="fas fa-eye"></i>
                                                        </button>
                                                        <button class="btn add-to-wishlist" 
                                                                data-product-id="@product.ProductID" 
                                                                title="Thêm vào yêu thích">
                                                            <i class="fas fa-heart"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                                
                                                <div class="card-body">
                                                    <h5 class="card-title">
                                                        <a asp-controller="Product" asp-action="Details" asp-route-id="@product.ProductID">
                                                            @product.Name
                                                        </a>
                                                    </h5>
                                                    
                                                    <div class="product-meta">
                                                        <span class="product-category">@(product.Category?.Name ?? "N/A")</span>
                                                        <div class="product-rating">
                                                            @for (int star = 1; star <= 5; star++)
                                                            {
                                                                <i class="fas fa-star @(star <= product.AverageRating ? "" : "text-muted")"></i>
                                                            }
                                                        </div>
                                                    </div>
                                                    
                                                    <p class="product-price">@product.Price.ToString("C0", new System.Globalization.CultureInfo("vi-VN"))</p>
                                                    
                                                    <button class="btn add-to-cart" 
                                                            data-product-id="@product.ProductID" 
                                                            data-quantity="1">
                                                        <i class="fas fa-shopping-cart me-2"></i>Thêm vào giỏ
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="text-center py-5">
                                    <i class="fas fa-box-open display-4 text-muted mb-3"></i>
                                    <h5 class="text-muted">Chưa có sản phẩm nào của thương hiệu này</h5>
                                </div>
                            }
                            
                            <div class="view-all-products">
                                <a asp-controller="Product" asp-action="Index" asp-route-brandId="@brand.BrandID" class="btn">
                                    <i class="fas fa-th-large me-2"></i>Xem tất cả sản phẩm @brand.Name
                                </a>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
    </div>
</section>

<!-- Contact Section -->
<section id="contact-section" class="py-5">
    <div class="container">
        <div class="row">
            <div class="col-12 text-center mb-5">
                <h2 class="display-5 fw-bold text-dark">Liên hệ với chúng tôi</h2>
                <p class="lead text-muted">Chúng tôi luôn sẵn sàng hỗ trợ bạn</p>
            </div>
        </div>
        
        <div class="row g-4 align-items-stretch">
            <!-- Google Map -->
            <div class="col-lg-6 mb-4 mb-lg-0">
                <div class="map-container shadow-sm rounded-3 overflow-hidden h-100">
                    <iframe 
                        src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3919.669726976133!2d106.67999361480042!3d10.761243192330742!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x31752f1b7c3ed289%3A0xa06651894598e488!2sHo%20Chi%20Minh%20City%20University%20of%20Science!5e0!3m2!1sen!2s!4v1629789458051!5m2!1sen!2s" 
                        width="100%" 
                        height="100%" 
                        style="border:0; min-height: 450px;" 
                        allowfullscreen="" 
                        loading="lazy">
                    </iframe>
                </div>
            </div>
            
            <!-- Contact Form -->
            <div class="col-lg-6">
                <div class="card border-0 shadow-sm h-100">
                    <div class="card-body p-4 p-lg-5">
                        <h3 class="card-title fw-bold mb-4 text-primary">Gửi tin nhắn cho chúng tôi</h3>
                        
                        <form asp-controller="Contact" asp-action="Send" method="post" class="contact-form">
                            <div class="row g-3">
                                <div class="col-md-6">
                                    <div class="form-floating mb-3">
                                        <input type="text" class="form-control" id="name" name="Name" placeholder="Họ và tên" required>
                                        <label for="name">Họ và tên</label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-floating mb-3">
                                        <input type="email" class="form-control" id="email" name="Email" placeholder="Email" required>
                                        <label for="email">Email</label>
                                    </div>
                                </div>
                                <div class="col-12">
                                    <div class="form-floating mb-3">
                                        <input type="text" class="form-control" id="subject" name="Subject" placeholder="Tiêu đề">
                                        <label for="subject">Tiêu đề</label>
                                    </div>
                                </div>
                                <div class="col-12">
                                    <div class="form-floating mb-4">
                                        <textarea class="form-control" id="message" name="Message" placeholder="Nội dung" style="height: 150px" required></textarea>
                                        <label for="message">Nội dung</label>
                                    </div>
                                </div>
                                <div class="col-12">
                                    <button type="submit" class="btn btn-primary btn-lg w-100 gradient-btn">
                                        <i class="fas fa-paper-plane me-2"></i>Gửi tin nhắn
                                    </button>
                                </div>
                            </div>
                        </form>
                        
                        <div class="mt-5">
                            <h4 class="h5 fw-bold mb-3">Thông tin liên hệ</h4>
                            <div class="d-flex align-items-center mb-3">
                                <div class="contact-icon me-3">
                                    <i class="fas fa-map-marker-alt text-primary"></i>
                                </div>
                                <p class="mb-0">227 Nguyễn Văn Cừ, Quận 5, TP Hồ Chí Minh</p>
                            </div>
                            <div class="d-flex align-items-center mb-3">
                                <div class="contact-icon me-3">
                                    <i class="fas fa-phone-alt text-primary"></i>
                                </div>
                                <p class="mb-0">(028) 3835 4266</p>
                            </div>
                            <div class="d-flex align-items-center">
                                <div class="contact-icon me-3">
                                    <i class="fas fa-envelope text-primary"></i>
                                </div>
                                <p class="mb-0">support@lolosport.com</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initialize add to cart functionality
    initAddToCart();
    
    // Initialize wishlist functionality
    initWishlist();
    
    // Initialize quick view functionality
    initQuickView();
});

// Add to cart functionality
function initAddToCart() {
    const addToCartButtons = document.querySelectorAll('.add-to-cart');
    
    addToCartButtons.forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            
            const productId = this.getAttribute('data-product-id');
            const quantity = this.getAttribute('data-quantity') || 1;
            
            if (productId) {
                addToCart(productId, quantity, null, this);
            }
        });
    });
}

// Wishlist functionality
function initWishlist() {
    const wishlistButtons = document.querySelectorAll('.add-to-wishlist');
    
    wishlistButtons.forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            
            const productId = this.getAttribute('data-product-id');
            
            if (productId) {
                toggleWishlist(productId);
            }
        });
    });
}

// Quick view functionality
function initQuickView() {
    const quickViewButtons = document.querySelectorAll('.quick-view');
    
    quickViewButtons.forEach(button => {
        button.addEventListener('click', function(e) {
            e.preventDefault();
            
            const productId = this.getAttribute('data-product-id');
            
            if (productId) {
                openQuickViewModal(productId);
            }
        });
    });
}

// Add to cart function (from product.js)
function addToCart(productId, quantity, attributeId = null, buttonElement = null) {
    console.log("Adding to cart:", { productId, quantity, attributeId });
    
    // Đảm bảo các tham số là kiểu dữ liệu đúng
    productId = parseInt(productId, 10);
    quantity = parseInt(quantity, 10);
    if (attributeId !== null && attributeId !== undefined) {
        attributeId = parseInt(attributeId, 10);
    }
    
    // Kiểm tra giá trị
    if (isNaN(productId) || productId <= 0) {
        showNotification('ID sản phẩm không hợp lệ', 'error');
        return;
    }
    
    // Show loading state
    if (buttonElement) {
        buttonElement.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Đang thêm...';
        buttonElement.disabled = true;
    }
    
    // Gửi request đến endpoint
    fetch('/Cart/AddToCartJson', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
        },
        body: JSON.stringify({
            productId: productId,
            quantity: quantity,
            attributeId: attributeId
        })
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
        if (data.success) {
            showNotification(data.message || 'Đã thêm sản phẩm vào giỏ hàng thành công!', 'success');
            updateCartCounter(data.cartCount);
        } else {
            showNotification(data.message || 'Có lỗi xảy ra khi thêm sản phẩm vào giỏ hàng', 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        showNotification('Có lỗi xảy ra khi thêm sản phẩm vào giỏ hàng', 'error');
    })
    .finally(() => {
        // Restore button state
        if (buttonElement) {
            buttonElement.innerHTML = '<i class="fas fa-shopping-cart me-2"></i>Thêm vào giỏ';
            buttonElement.disabled = false;
        }
    });
}

// Toggle wishlist function
function toggleWishlist(productId) {
    fetch('/Wishlist/Toggle', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'Accept': 'application/json'
        },
        body: JSON.stringify({ productId: parseInt(productId) })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            showNotification(data.message, 'success');
            
            // Update all wishlist buttons for this product
            const wishlistButtons = document.querySelectorAll(`[data-product-id="${productId}"].add-to-wishlist`);
            wishlistButtons.forEach(button => {
                const icon = button.querySelector('i');
                if (data.isInWishlist) {
                    icon.classList.remove('far');
                    icon.classList.add('fas');
                    button.classList.add('text-danger');
                } else {
                    icon.classList.remove('fas');
                    icon.classList.add('far');
                    button.classList.remove('text-danger');
                }
            });
            
            updateWishlistCount();
        } else {
            showNotification(data.message, 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        showNotification('Có lỗi xảy ra khi cập nhật danh sách yêu thích', 'error');
    });
}

// Quick view modal function
function openQuickViewModal(productId) {
    // If quick view modal exists, use it; otherwise redirect to product detail
    const quickViewModal = document.getElementById('quickViewModal');
    if (quickViewModal) {
        // Load product data and show modal
        fetch(`/Product/GetProductDetails/${productId}`)
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                populateQuickView(data.product);
                const modal = new bootstrap.Modal(quickViewModal);
                modal.show();
            } else {
                window.location.href = `/Product/Details/${productId}`;
            }
        })
        .catch(error => {
            console.error('Error:', error);
            window.location.href = `/Product/Details/${productId}`;
        });
    } else {
        // Redirect to product detail page
        window.location.href = `/Product/Details/${productId}`;
    }
}

// Update cart counter
function updateCartCounter(count) {
    const cartCounters = document.querySelectorAll('.cart-count');
    cartCounters.forEach(counter => {
        counter.textContent = count;
        if (count > 0) {
            counter.style.display = 'inline';
        } else {
            counter.style.display = 'none';
        }
    });
}

// Update wishlist count
function updateWishlistCount() {
    fetch('/Wishlist/GetCount')
    .then(response => response.json())
    .then(data => {
        const wishlistCounters = document.querySelectorAll('.wishlist-count');
        wishlistCounters.forEach(counter => {
            counter.textContent = data.count;
            if (data.count > 0) {
                counter.style.display = 'inline';
            } else {
                counter.style.display = 'none';
            }
        });
    })
    .catch(error => {
        console.error('Error updating wishlist count:', error);
    });
}

// Show notification
function showNotification(message, type = 'info') {
    // Remove any existing notifications
    const existingNotifications = document.querySelectorAll('.notification');
    existingNotifications.forEach(notification => notification.remove());
    
    // Create notification element
    const notification = document.createElement('div');
    notification.className = `notification notification-${type}`;
    notification.textContent = message;
    
    // Add to page
    document.body.appendChild(notification);
    
    // Show notification
    setTimeout(() => {
        notification.classList.add('show');
    }, 100);
    
    // Hide notification after 3 seconds
    setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => {
            notification.remove();
        }, 300);
    }, 3000);
}
</script>
