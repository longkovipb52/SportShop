@using Microsoft.AspNetCore.Mvc.Rendering
@model SportShop.Models.ViewModels.OrderHistoryViewModel
@{
    ViewData["Title"] = "Lịch sử đơn hàng";
    ViewData["CustomCSS"] = "order.css";
    var statistics = ViewBag.Statistics as SportShop.Models.ViewModels.OrderStatusStatisticsViewModel;
}

<section class="order-hero">
    <div class="order-hero-overlay"></div>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-8 text-center">
                <div class="hero-content">
                    <div class="order-icon">
                        <i class="fas fa-history"></i>
                    </div>
                    <h1 class="display-5 fw-bold text-white mb-2">Lịch sử đơn hàng</h1>
                    <p class="lead text-white-50">Theo dõi và quản lý tất cả đơn hàng của bạn</p>
                </div>
            </div>
        </div>
    </div>
</section>

<section class="order-content py-5">
    <div class="container">
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show animate__animated animate__bounceIn" role="alert">
                <i class="fas fa-check-circle me-2"></i>
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger alert-dismissible fade show animate__animated animate__shakeX" role="alert">
                <i class="fas fa-exclamation-triangle me-2"></i>
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <!-- Statistics Cards -->
        @if (statistics != null)
        {
            <div class="row g-3 mb-4">
                <div class="col-md-2">
                    <div class="stat-card stat-pending">
                        <div class="stat-icon">
                            <i class="fas fa-clock"></i>
                        </div>
                        <div class="stat-info">
                            <h3>@statistics.PendingCount</h3>
                            <p>Chờ xử lý</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="stat-card stat-processing">
                        <div class="stat-icon">
                            <i class="fas fa-cogs"></i>
                        </div>
                        <div class="stat-info">
                            <h3>@statistics.ProcessingCount</h3>
                            <p>Đang xử lý</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="stat-card stat-shipping">
                        <div class="stat-icon">
                            <i class="fas fa-truck"></i>
                        </div>
                        <div class="stat-info">
                            <h3>@statistics.ShippingCount</h3>
                            <p>Đang giao</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="stat-card stat-completed">
                        <div class="stat-icon">
                            <i class="fas fa-check-circle"></i>
                        </div>
                        <div class="stat-info">
                            <h3>@statistics.CompletedCount</h3>
                            <p>Hoàn thành</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="stat-card stat-cancelled">
                        <div class="stat-icon">
                            <i class="fas fa-times-circle"></i>
                        </div>
                        <div class="stat-info">
                            <h3>@statistics.CancelledCount</h3>
                            <p>Đã hủy</p>
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="stat-card stat-total">
                        <div class="stat-icon">
                            <i class="fas fa-dollar-sign"></i>
                        </div>
                        <div class="stat-info">
                            <h3>@statistics.TotalSpent.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</h3>
                            <p>Tổng chi tiêu</p>
                        </div>
                    </div>
                </div>
            </div>
        }

        <!-- Filters and Search -->
        <div class="filter-section mb-4">
            <div class="row g-3 align-items-end">
                <div class="col-md-6">
                    <form method="get" class="order-search-form">
                        <div class="input-group">
                            <span class="input-group-text">
                                <i class="fas fa-search"></i>
                            </span>
                            <input type="text" class="form-control" name="search" 
                                   value="@Model.SearchTerm" 
                                   placeholder="Tìm theo mã đơn hàng hoặc tên sản phẩm...">
                            <button class="btn btn-order-search" type="submit">
                                <i class="fas fa-search me-1"></i>Tìm kiếm
                            </button>
                        </div>
                        <input type="hidden" name="status" value="@Model.StatusFilter">
                    </form>
                </div>
                <div class="col-md-3">
                    <form method="get" class="status-filter">
                        <select class="form-select" name="status" onchange="this.form.submit()" id="statusFilter">
                            <option value="">Tất cả trạng thái</option>
                            <option value="Pending">Chờ xử lý</option>
                            <option value="Processing">Đang xử lý</option>
                            <option value="Shipping">Đang giao</option>
                            <option value="Completed">Hoàn thành</option>
                            <option value="Cancelled">Đã hủy</option>
                        </select>
                        <input type="hidden" name="search" value="@Model.SearchTerm">
                        <script>
                            document.addEventListener('DOMContentLoaded', function() {
                                var statusFilter = document.getElementById('statusFilter');
                                var currentStatus = '@Html.Raw(Model.StatusFilter ?? "")';
                                if (statusFilter && currentStatus) {
                                    statusFilter.value = currentStatus;
                                }
                            });
                        </script>
                    </form>
                </div>
                <div class="col-md-3 text-end">
                    <span class="result-count">
                        <i class="fas fa-list-alt me-1"></i>
                        Tìm thấy <strong>@Model.TotalOrders</strong> đơn hàng
                    </span>
                </div>
            </div>
        </div>

        <!-- Orders List -->
        @if (Model.Orders.Any())
        {
            <div class="orders-list">
                @foreach (var order in Model.Orders)
                {
                    <div class="order-card">
                        <div class="order-header">
                            <div class="order-info">
                                <h5 class="order-id">
                                    <i class="fas fa-receipt me-2"></i>
                                    Đơn hàng #@order.OrderID
                                </h5>
                                <p class="order-date">
                                    <i class="fas fa-calendar-alt me-1"></i>
                                    @order.OrderDate.ToString("dd/MM/yyyy HH:mm")
                                </p>
                            </div>
                            <div class="order-status">
                                <span class="status-badge @order.StatusClass">@order.StatusDisplay</span>
                            </div>
                        </div>

                        <div class="order-body">
                            <div class="row">
                                <div class="col-md-8">
                                    <div class="order-items">
                                        @foreach (var item in order.Items)
                                        {
                                            <div class="order-item">
                                                <div class="item-image">
                                                    @if (!string.IsNullOrEmpty(item.ProductImage))
                                                    {
                                                        <img src="~/upload/product/@item.ProductImage" alt="@item.ProductName" 
                                                             onerror="this.src='~/image/loading-placeholder.png'">
                                                    }
                                                    else
                                                    {
                                                        <img src="~/image/loading-placeholder.png" alt="@item.ProductName">
                                                    }
                                                </div>
                                                <div class="item-info">
                                                    <h6 class="item-name">@item.ProductName</h6>
                                                    <p class="item-details">
                                                        @if (!string.IsNullOrEmpty(item.Size))
                                                        {
                                                            <span class="item-size">Size: @item.Size</span>
                                                        }
                                                        @if (!string.IsNullOrEmpty(item.Color))
                                                        {
                                                            <span class="item-color">Màu: @item.Color</span>
                                                        }
                                                    </p>
                                                    <p class="item-quantity">Số lượng: @item.Quantity</p>
                                                </div>
                                                <div class="item-price">
                                                    @item.UnitPrice.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))
                                                </div>
                                            </div>
                                        }
                                        @if (order.ItemCount > 3)
                                        {
                                            <div class="more-items">
                                                <i class="fas fa-ellipsis-h me-1"></i>
                                                và @(order.ItemCount - 3) sản phẩm khác
                                            </div>
                                        }
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="order-summary">
                                        <div class="summary-item">
                                            <span class="label">Giao hàng:</span>
                                            <span class="value">@order.ShippingName</span>
                                        </div>
                                        <div class="summary-item">
                                            <span class="label">Thanh toán:</span>
                                            <span class="value">@order.PaymentMethod</span>
                                        </div>
                                        <div class="summary-item total">
                                            <span class="label">Tổng tiền:</span>
                                            <span class="value">@order.TotalAmount.ToString("C0", System.Globalization.CultureInfo.GetCultureInfo("vi-VN"))</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="order-footer">
                            <div class="order-actions">
                                <a href="@Url.Action("Detail", new { id = order.OrderID })" 
                                   class="btn btn-outline-primary">
                                    <i class="fas fa-eye me-1"></i>Xem chi tiết
                                </a>
                                @if (order.Status == "Completed" || order.Status == "Hoàn thành" || order.StatusDisplay == "Hoàn thành")
                                {
                                    <a href="@Url.Action("Print", new { id = order.OrderID })" 
                                       class="btn btn-outline-secondary" target="_blank">
                                        <i class="fas fa-print me-1"></i>In hóa đơn
                                    </a>
                                    @foreach (var item in order.Items)
                                    {
                                        <button type="button" 
                                                class="btn btn-outline-success review-btn" 
                                                data-order-id="@order.OrderID"
                                                data-product-id="@item.ProductID"
                                                data-product-name="@item.ProductName">
                                            <i class="fas fa-star me-1"></i><span class="review-btn-text">Đánh giá</span>
                                        </button>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Order history pagination" class="mt-4">
                    <ul class="pagination justify-content-center">
                        @if (Model.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { page = 1, status = Model.StatusFilter, search = Model.SearchTerm })">
                                    <i class="fas fa-angle-double-left"></i>
                                </a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage - 1, status = Model.StatusFilter, search = Model.SearchTerm })">
                                    <i class="fas fa-angle-left"></i>
                                </a>
                            </li>
                        }

                        @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { page = i, status = Model.StatusFilter, search = Model.SearchTerm })">@i</a>
                            </li>
                        }

                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.CurrentPage + 1, status = Model.StatusFilter, search = Model.SearchTerm })">
                                    <i class="fas fa-angle-right"></i>
                                </a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Index", new { page = Model.TotalPages, status = Model.StatusFilter, search = Model.SearchTerm })">
                                    <i class="fas fa-angle-double-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        }
        else
        {
            <div class="empty-state">
                <div class="empty-icon">
                    <i class="fas fa-shopping-bag"></i>
                </div>
                <h3>Chưa có đơn hàng nào</h3>
                <p>Bạn chưa có đơn hàng nào. Hãy bắt đầu mua sắm ngay!</p>
                <a href="/Product" class="btn btn-primary">
                    <i class="fas fa-shopping-cart me-2"></i>Bắt đầu mua sắm
                </a>
            </div>
        }
    </div>
</section>

<!-- Review Modal -->
<div class="modal fade" id="reviewModal" tabindex="-1" aria-labelledby="reviewModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content review-modal-content">
            <div class="modal-header review-modal-header">
                <h5 class="modal-title" id="reviewModalLabel">
                    <i class="fas fa-star-half-alt me-2"></i>Đánh giá sản phẩm
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body review-modal-body">
                <form id="reviewForm">
                    <input type="hidden" id="reviewOrderId" name="orderId">
                    <input type="hidden" id="reviewProductId" name="productId">
                    <input type="hidden" id="reviewId" name="reviewId" value="">
                    <input type="hidden" id="isEditMode" value="false">
                    
                    <div class="product-review-info">
                        <div class="product-icon">
                            <i class="fas fa-box-open"></i>
                        </div>
                        <h6 class="product-name-review" id="productNameReview"></h6>
                        <div id="editModeNotice" class="alert alert-info mt-3" style="display: none;">
                            <i class="fas fa-info-circle me-2"></i>
                            <span id="editModeText"></span>
                        </div>
                    </div>

                    <div class="rating-section mb-4">
                        <label class="form-label">Đánh giá của bạn <span class="text-danger">*</span></label>
                        <div class="star-rating">
                            <input type="radio" name="rating" value="5" id="star5">
                            <label for="star5" title="5 sao - Xuất sắc">
                                <i class="fas fa-star"></i>
                            </label>
                            <input type="radio" name="rating" value="4" id="star4">
                            <label for="star4" title="4 sao - Tốt">
                                <i class="fas fa-star"></i>
                            </label>
                            <input type="radio" name="rating" value="3" id="star3">
                            <label for="star3" title="3 sao - Bình thường">
                                <i class="fas fa-star"></i>
                            </label>
                            <input type="radio" name="rating" value="2" id="star2">
                            <label for="star2" title="2 sao - Kém">
                                <i class="fas fa-star"></i>
                            </label>
                            <input type="radio" name="rating" value="1" id="star1">
                            <label for="star1" title="1 sao - Rất kém">
                                <i class="fas fa-star"></i>
                            </label>
                        </div>
                        <div class="rating-text" id="ratingText">Chọn số sao để đánh giá</div>
                    </div>

                    <div class="mb-4">
                        <label for="reviewComment" class="form-label">Nhận xét của bạn</label>
                        <textarea class="form-control review-textarea" 
                                  id="reviewComment" 
                                  name="comment" 
                                  rows="4" 
                                  placeholder="Chia sẻ trải nghiệm của bạn về sản phẩm..."></textarea>
                        <small class="text-muted">Tối đa 500 ký tự</small>
                    </div>

                    <div class="review-actions">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                            <i class="fas fa-times me-2"></i>Hủy
                        </button>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-paper-plane me-2"></i>Gửi đánh giá
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <link href="~/css/review-modal.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" rel="stylesheet">
    
    <script>
        // Review Modal Functions
        async function openReviewModal(orderId, productName, productId, isEdit = false) {
            document.getElementById('reviewOrderId').value = orderId;
            document.getElementById('reviewProductId').value = productId;
            document.getElementById('productNameReview').textContent = productName;
            
            // Reset form
            document.getElementById('reviewForm').reset();
            document.getElementById('reviewId').value = '';
            document.getElementById('isEditMode').value = 'false';
            
            // Reset edit notice safely
            const editNotice = document.getElementById('editModeNotice');
            if (editNotice) {
                editNotice.style.display = 'none';
            }
            
            // Reset rating text
            const ratingText = document.getElementById('ratingText');
            if (ratingText) {
                ratingText.textContent = 'Chọn số sao để đánh giá';
            }
            
            // Reset star labels
            document.querySelectorAll('.star-rating label').forEach(label => {
                label.classList.remove('selected');
            });
            
            // Re-enable all form elements (in case they were disabled)
            document.getElementById('reviewForm').querySelectorAll('input, textarea, button[type="submit"]').forEach(el => {
                el.disabled = false;
            });
            
            // Check if product has been reviewed
            if (isEdit) {
                try {
                    const response = await fetch(`@Url.Action("GetReview", "OrderHistory")?orderId=${orderId}&productId=${productId}`);
                    const result = await response.json();
                    
                    if (result.success) {
                        // Set edit mode
                        document.getElementById('isEditMode').value = 'true';
                        document.getElementById('reviewId').value = result.reviewId;
                        
                        // Load existing review data
                        if (result.rating) {
                            const ratingInput = document.querySelector(`input[name="rating"][value="${result.rating}"]`);
                            if (ratingInput) {
                                ratingInput.checked = true;
                                ratingInput.dispatchEvent(new Event('change'));
                            }
                        }
                        
                        if (result.comment) {
                            document.getElementById('reviewComment').value = result.comment;
                        }
                        
                        // Show edit notice
                        const editNoticeEl = document.getElementById('editModeNotice');
                        const editTextEl = document.getElementById('editModeText');
                        
                        if (editNoticeEl && editTextEl) {
                            if (result.canEdit) {
                                const hoursRemaining = Math.floor(result.hoursRemaining);
                                const minutesRemaining = Math.floor((result.hoursRemaining - hoursRemaining) * 60);
                                editTextEl.innerHTML = `Bạn đang chỉnh sửa đánh giá. Còn <strong>${hoursRemaining} giờ ${minutesRemaining} phút</strong> để chỉnh sửa.`;
                                editNoticeEl.className = 'alert alert-info mt-3';
                            } else {
                                editTextEl.innerHTML = 'Đã hết thời gian chỉnh sửa đánh giá (24 giờ). Bạn chỉ có thể xem lại đánh giá.';
                                editNoticeEl.className = 'alert alert-warning mt-3';
                                // Disable form
                                document.getElementById('reviewForm').querySelectorAll('input, textarea, button[type="submit"]').forEach(el => {
                                    el.disabled = true;
                                });
                            }
                            editNoticeEl.style.display = 'block';
                        }
                        
                        // Update modal title
                        const modalTitle = document.getElementById('reviewModalLabel');
                        if (modalTitle) {
                            modalTitle.innerHTML = '<i class="fas fa-edit me-2"></i>Chỉnh sửa đánh giá';
                        }
                    }
                } catch (error) {
                    console.error('Error loading review:', error);
                }
            } else {
                // New review mode
                const modalTitle = document.getElementById('reviewModalLabel');
                if (modalTitle) {
                    modalTitle.innerHTML = '<i class="fas fa-star-half-alt me-2"></i>Đánh giá sản phẩm';
                }
            }
            
            // Show modal
            const modal = new bootstrap.Modal(document.getElementById('reviewModal'));
            modal.show();
        }

        document.addEventListener('DOMContentLoaded', function() {
            // Initialize review buttons with check for existing reviews
            document.querySelectorAll('.review-btn').forEach(btn => {
                const orderId = btn.getAttribute('data-order-id');
                const productId = btn.getAttribute('data-product-id');
                const productName = btn.getAttribute('data-product-name');
                
                // Check if already reviewed
                fetch(`@Url.Action("GetReview", "OrderHistory")?orderId=${orderId}&productId=${productId}`)
                    .then(response => response.json())
                    .then(result => {
                        if (result.success) {
                            // Has review - change button
                            const btnText = btn.querySelector('.review-btn-text');
                            const btnIcon = btn.querySelector('i');
                            
                            if (result.canEdit) {
                                btnText.textContent = 'Sửa đánh giá';
                                btnIcon.className = 'fas fa-edit me-1';
                                btn.classList.remove('btn-outline-success');
                                btn.classList.add('btn-outline-warning');
                            } else {
                                btnText.textContent = 'Xem đánh giá';
                                btnIcon.className = 'fas fa-eye me-1';
                                btn.classList.remove('btn-outline-success');
                                btn.classList.add('btn-outline-info');
                            }
                            
                            // Add click handler for edit mode
                            btn.addEventListener('click', () => {
                                openReviewModal(orderId, productName, productId, true);
                            });
                        } else {
                            // No review - normal click handler
                            btn.addEventListener('click', () => {
                                openReviewModal(orderId, productName, productId, false);
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error checking review:', error);
                        // Fallback to normal handler
                        btn.addEventListener('click', () => {
                            openReviewModal(orderId, productName, productId, false);
                        });
                    });
            });

            // Star rating interaction
            const starInputs = document.querySelectorAll('.star-rating input');
            const starLabels = document.querySelectorAll('.star-rating label');
            const ratingText = document.getElementById('ratingText');

            const ratingTexts = {
                '5': 'Xuất sắc! ⭐⭐⭐⭐⭐',
                '4': 'Tốt! ⭐⭐⭐⭐',
                '3': 'Bình thường ⭐⭐⭐',
                '2': 'Kém ⭐⭐',
                '1': 'Rất kém ⭐'
            };

            starInputs.forEach((input, index) => {
                input.addEventListener('change', function() {
                    const rating = this.value;
                    ratingText.textContent = ratingTexts[rating];
                    
                    // Update visual state
                    starLabels.forEach((label, labelIndex) => {
                        if (labelIndex >= starInputs.length - index) {
                            label.classList.add('selected');
                        } else {
                            label.classList.remove('selected');
                        }
                    });
                });
            });

            // Hover effect for stars
            starLabels.forEach((label, index) => {
                label.addEventListener('mouseenter', function() {
                    starLabels.forEach((l, i) => {
                        if (i >= starLabels.length - index - 1) {
                            l.classList.add('hover');
                        } else {
                            l.classList.remove('hover');
                        }
                    });
                });
            });

            document.querySelector('.star-rating').addEventListener('mouseleave', function() {
                starLabels.forEach(l => l.classList.remove('hover'));
            });

            // Handle review form submission
            document.getElementById('reviewForm').addEventListener('submit', async function(e) {
                e.preventDefault();

                const isEditMode = document.getElementById('isEditMode').value === 'true';
                const reviewId = document.getElementById('reviewId').value;
                const orderId = document.getElementById('reviewOrderId').value;
                const productId = document.getElementById('reviewProductId').value;
                const rating = document.querySelector('input[name="rating"]:checked')?.value;
                const comment = document.getElementById('reviewComment').value;

                if (!rating) {
                    alert('Vui lòng chọn số sao đánh giá!');
                    return;
                }

                // Show loading
                const submitBtn = this.querySelector('button[type="submit"]');
                const originalText = submitBtn.innerHTML;
                submitBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Đang gửi...';
                submitBtn.disabled = true;

                try {
                    const formData = new FormData();
                    formData.append('rating', rating);
                    formData.append('comment', comment);
                    
                    let url, actionText;
                    if (isEditMode) {
                        // Update existing review
                        url = '@Url.Action("UpdateReview", "OrderHistory")';
                        formData.append('reviewId', reviewId);
                        actionText = 'Đang cập nhật...';
                    } else {
                        // Create new review
                        url = '@Url.Action("SubmitReview", "OrderHistory")';
                        formData.append('orderId', orderId);
                        formData.append('productId', productId);
                        actionText = 'Đang gửi...';
                    }

                    submitBtn.innerHTML = `<i class="fas fa-spinner fa-spin me-2"></i>${actionText}`;

                    const response = await fetch(url, {
                        method: 'POST',
                        body: formData,
                        headers: {
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value
                        }
                    });

                    const result = await response.json();

                    if (result.success) {
                        // Show success message
                        const modal = bootstrap.Modal.getInstance(document.getElementById('reviewModal'));
                        modal.hide();

                        // Show success alert
                        const alertDiv = document.createElement('div');
                        alertDiv.className = 'alert alert-success alert-dismissible fade show animate__animated animate__bounceIn';
                        alertDiv.innerHTML = `
                            <i class="fas fa-check-circle me-2"></i>
                            ${result.message}
                            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                        `;
                        document.querySelector('.order-content .container').insertBefore(
                            alertDiv, 
                            document.querySelector('.order-content .container').firstChild
                        );

                        // Auto hide alert
                        setTimeout(() => {
                            alertDiv.classList.add('animate__fadeOut');
                            setTimeout(() => alertDiv.remove(), 1000);
                        }, 5000);

                        // Reload page to update button status
                        setTimeout(() => {
                            location.reload();
                        }, 2000);

                    } else {
                        alert(result.message || 'Có lỗi xảy ra. Vui lòng thử lại!');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    alert('Có lỗi xảy ra. Vui lòng thử lại!');
                } finally {
                    submitBtn.innerHTML = originalText;
                    submitBtn.disabled = false;
                }
            });

            // Reset modal when closed
            const reviewModal = document.getElementById('reviewModal');
            if (reviewModal) {
                reviewModal.addEventListener('hidden.bs.modal', function() {
                    // Reset form
                    document.getElementById('reviewForm').reset();
                    document.getElementById('reviewId').value = '';
                    document.getElementById('isEditMode').value = 'false';
                    
                    // Hide edit notice
                    const editNotice = document.getElementById('editModeNotice');
                    if (editNotice) {
                        editNotice.style.display = 'none';
                    }
                    
                    // Re-enable all form elements
                    document.getElementById('reviewForm').querySelectorAll('input, textarea, button[type="submit"]').forEach(el => {
                        el.disabled = false;
                    });
                    
                    // Reset stars
                    document.querySelectorAll('.star-rating label').forEach(label => {
                        label.classList.remove('selected');
                    });
                    
                    // Reset rating text
                    const ratingText = document.getElementById('ratingText');
                    if (ratingText) {
                        ratingText.textContent = 'Chọn số sao để đánh giá';
                    }
                });
            }

            // Auto-hide alerts
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(alert => {
                setTimeout(() => {
                    alert.classList.add('animate__animated', 'animate__fadeOut');
                    setTimeout(() => {
                        alert.remove();
                    }, 1000);
                }, 5000);
            });

            // Animate cards on scroll
            const observerOptions = {
                threshold: 0.1,
                rootMargin: '0px 0px -50px 0px'
            };

            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add('animate__animated', 'animate__fadeInUp');
                    }
                });
            }, observerOptions);

            document.querySelectorAll('.order-card').forEach(card => {
                observer.observe(card);
            });
        });
    </script>
}